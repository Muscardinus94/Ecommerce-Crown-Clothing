{"ast":null,"code":"import shopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchColletionsFailure = message => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: message\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchColletionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/jae/Desktop/ecommerce-crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchColletionsFailure","message","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,sBAAsB,GAAIC,OAAD,KAAc;AAClDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD4B;AAElDH,EAAAA,OAAO,EAAEE;AAFyC,CAAd,CAA/B;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQ,MAAOC,QAAP,IAAoB;AACxB,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGa,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACV,OAAP,CAAvB,CAN5B;AAOD,GAVD;AAWD,CAZM","sourcesContent":["import shopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchColletionsFailure = (message) => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: message,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef\n      .get()\n      .then(async (snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error) => dispatch(fetchColletionsFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}